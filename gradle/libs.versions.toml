[versions]
kotlin = "2.1.21"
plugin-agp = "8.10.0"
plugin-google-ksp = "2.1.21-2.0.1"
coreKtx = "1.16.0"
junit = "4.13.2"
junitVersion = "1.2.1"
espressoCore = "3.6.1"
appcompat = "1.7.0"
material = "1.12.0"
annotations = "1.9.1"
constraintlayout = "2.2.1"
constraintlayout-compose = "1.1.1"
lifecycle = "2.9.0"
activityCompose = "1.10.1"
composeBom = "2025.05.01"
coil = "3.2.0"
telephoto = "0.16.0"
timber = "5.0.1"
dagger = "2.56.2"
plugin-hilt = "2.56.2"
anvil = "0.4.1"
moshi = "1.15.2"
okhttp = "4.12.0"
retrofit = "3.0.0"
splashscreen = "1.2.0-beta02"
navigation = "2.9.0"
robolectric = "4.14.1"
hilt = "1.2.0"

[plugins]
android-application = { id = "com.android.application", version.ref = "plugin-agp" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlin-ksp = { id = "com.google.devtools.ksp", version.ref = "plugin-google-ksp" }
kotlin-parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
dagger-hilt = { id = "com.google.dagger.hilt.android", version.ref = "plugin-hilt" }
dagger-hilt-android = { id = "com.google.dagger:hilt-android-gradle-plugin", version.ref = "plugin-hilt" }
androidx-navigation-safeargs = { id = "androidx.navigation.safeargs.kotlin", version.ref = "navigation" }

[libraries]
# material UI
material = { group = "com.google.android.material", name = "material", version.ref = "material" }
androidx-material3 = { group = "androidx.compose.material3", name = "material3" }
androidx-icons-extended = { group = "androidx.compose.material", name = "material-icons-extended" }
androidx-icons-core = { group = "androidx.compose.material", name = "material-icons-core" }

# testing
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junitVersion" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }
androidx-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }
androidx-ui-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4" }

# Kotlin Lang support
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }

# https://developer.android.com/jetpack/androidx/releases/annotation
androidx-annotations = { group = "androidx.annotation", name = "annotation", version.ref = "annotations" }

# https://developer.android.com/jetpack/androidx/releases/appcompat
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }

# Splasgscreen support, https://developer.android.com/jetpack/androidx/releases/core
# APIs for SplashScreen, including compatibility helpers on devices prior Android 12
androidx-splashscreen = { group = "androidx.core", name = "core-splashscreen", version.ref = "splashscreen" }

# Jetpack Compose, https://developer.android.com/jetpack/androidx/releases/compose#versions
androidx-compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "composeBom" }
androidx-activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "activityCompose" }
androidx-navigation-compose = { group = "androidx.navigation", name = "navigation-compose", version.ref = "navigation" }
androidx-navigation-testing = { group = "androidx.navigation", name = "navigation-testing", version.ref = "navigation" }
androidx-navigation-runtime-android = { group = "androidx.navigation", name = "navigation-runtime-android", version.ref = "navigation" }

androidx-lifecycle-livedata-ktx = { group = "androidx.lifecycle", name = "lifecycle-livedata-ktx", version.ref = "lifecycle" }
androidx-lifecycle-viewmodel-ktx = { group = "androidx.lifecycle", name = "lifecycle-viewmodel-ktx", version.ref = "lifecycle" }
androidx-lifecycle-runtime-ktx = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycle" }

androidx-constraintlayout = { group = "androidx.constraintlayout", name = "constraintlayout", version.ref = "constraintlayout" }
androidx-constraintlayout-compose = { group = "androidx.constraintlayout", name = "constraintlayout-compose", version.ref = "constraintlayout-compose" }

androidx-ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics" }
androidx-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
androidx-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }

# https://coil-kt.github.io/coil/getting_started/
coilCompose = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coil" }
coilOkHttp = { module = "io.coil-kt.coil3:coil-network-okhttp", version.ref = "coil" }
coilGif = { module = "io.coil-kt.coil3:coil-gif", version.ref = "coil" }

# https://saket.github.io/telephoto/zoomableimage/
telephoto-zoomableimage = { module = "me.saket.telephoto:zoomable-image-coil3", version.ref = "telephoto" }
telephoto-zoomable = { module = "me.saket.telephoto:zoomable", version.ref = "telephoto" }

# https://github.com/JakeWharton/timber
timber = { module = "com.jakewharton.timber:timber", version.ref = "timber" }

# https://dagger.dev/hilt/gradle-setup
hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "dagger" }
hilt-compiler = { module = "com.google.dagger:hilt-compiler", version.ref = "dagger" }
hilt-android-testing = { module = "com.google.dagger:hilt-android-testing", version.ref = "dagger" }

androidx-hilt-common = { group = "androidx.hilt", name = "hilt-common", version.ref = "hilt" }
androidx-hilt-compiler = { group = "androidx.hilt", name = "hilt-compiler", version.ref = "hilt" }
androidx-hilt-navigation-compose = { group = "androidx.hilt", name = "hilt-navigation-compose", version.ref = "hilt" }
#androidx-hilt-lifecycle-viewmodel = { group = "androidx.hilt", name = "hilt-lifecycle-viewmodel", version.ref = "hilt" }

dagger-apt-compiler = { module = "com.google.dagger:dagger-compiler", version.ref = "dagger" }
dagger-runtime = { module = "com.google.dagger:dagger", version.ref = "dagger" }
dagger-spi = { module = "com.google.dagger:dagger-spi", version.ref = "dagger" }
anvil-annotations = { module = "dev.zacsweers.anvil:annotations", version.ref = "anvil" }
anvil-annotationsOptional = { module = "dev.zacsweers.anvil:annotations-optional", version.ref = "anvil" }
anvil-compiler = { module = "dev.zacsweers.anvil:compiler", version.ref = "anvil" }

# OkHttp and okio
square-okio = "com.squareup.okio:okio:3.11.0"
square-okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
square-okhttpBrotli = { module = "com.squareup.okhttp3:okhttp-brotli", version.ref = "okhttp" }
square-okhttpLoggingInterceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }
square-okhttpMockwebserver = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "okhttp" }

# Moshi, https://github.com/square/moshi?tab=readme-ov-file#kotlin
square-moshi = { module = "com.squareup.moshi:moshi", version.ref = "moshi" }
square-moshiAdapters = { module = "com.squareup.moshi:moshi-adapters", version.ref = "moshi" }
square-moshiKotlin = { module = "com.squareup.moshi:moshi-kotlin", version.ref = "moshi" }
square-moshiKotlinCodegen = { module = "com.squareup.moshi:moshi-kotlin-codegen", version.ref = "moshi" }

# https://square.github.io/retrofit/configuration/
retrofit-core = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofit-moshi = { module = "com.squareup.retrofit2:converter-moshi", version.ref = "retrofit" }
retrofit-debug-mock = { module = "com.squareup.retrofit2:retrofit-mock", version.ref = "retrofit" }
retrofit-kotlinxSerialization = "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:1.0.0"

robolectric = { group = "org.robolectric", name = "robolectric", version.ref = "robolectric" }


[bundles]
coil = ["coilCompose", "coilOkHttp", "coilGif"]
telephoto = ["telephoto-zoomableimage", "telephoto-zoomable"]
square-okhttp = ["square-okhttp", "square-okhttpLoggingInterceptor", "square-okhttpBrotli"]
retrofit = ["retrofit-core", "retrofit-moshi"]
